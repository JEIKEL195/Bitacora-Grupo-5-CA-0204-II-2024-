# Bitácora 4

## Introducción

### Visualización y Limpieza de la Nueva Base de Datos

Queremos señalar que fue necesario cambiar la base de datos utilizada, ya que la anterior parecía haber sido generada artificialmente, sin provenir de datos reales. Para la presente bitácora, hemos optado por una base de datos auténtica que incluye información sobre pagos por defecto, factores demográficos, datos de crédito, historial de pagos y estados de cuenta de clientes de tarjetas de crédito en Taiwán, correspondiente al periodo de abril a septiembre de 2005.

Empezamos el estudio de la base de datos, para ello lo primodiarla es cargarla.

```{r}
# Cargamos nuestra nueva base de datos.
library(readr)
data_credit <- read_csv("C:/Users/Admin/Downloads/UCI_Credit_Card.csv")

# Visualizamos nuestro dataset.
data_credit
```

Una vez cargada la base de datos, es importante realizar algunas observaciones iniciales antes de comenzar a trabajar con ella. En primer lugar, queremos revisar los nombres de las variables y el tipo de datos que representan, ya que esto nos permite empezar a considerar qué técnicas estadísticas podríamos aplicar. Además, nos interesa verificar que la base de datos esté limpia; para ello, realizaremos un conteo de los valores faltantes en el dataset.

```{r}
# Verificamos los nombres de nuestro dataset
names(data_credit)
```

Con los nombres hacemos un pequeño resumen de qué significa cada uno:

-   ID: ID de cada cliente.
-   LIMIT_BAL: Monto de crédito otorgado en dólares taiwaneses (NT) (incluye crédito individual y familiar/suplementario).
-   SEX: Género (1=hombre, 2=mujer).
-   EDUCATION: Nivel educativo (1=posgrado, 2=universidad, 3=preparatoria, 4=otros, 5=desconocido, 6=desconocido).
-   MARRIAGE: Estado civil (1=casado, 2=soltero, 3=otros).
-   AGE: Edad en años.
-   PAY_0: Estado de reembolso en septiembre de 2005 (-1=pago puntual, 1=atraso de un mes, 2=atraso de dos meses, …, 8=atraso de ocho meses, 9=atraso de nueve meses o más).
-   PAY_2: Estado de reembolso en agosto de 2005 (escala igual a la anterior).
-   PAY_3: Estado de reembolso en julio de 2005 (escala igual a la anterior).
-   PAY_4: Estado de reembolso en junio de 2005 (escala igual a la anterior).
-   PAY_5: Estado de reembolso en mayo de 2005 (escala igual a la anterior).
-   PAY_6: Estado de reembolso en abril de 2005 (escala igual a la anterior).
-   BILL_AMT1: Monto del estado de cuenta en septiembre de 2005 (dólares taiwaneses, NT).
-   BILL_AMT2: Monto del estado de cuenta en agosto de 2005 (dólares taiwaneses, NT).
-   BILL_AMT3: Monto del estado de cuenta en julio de 2005 (dólares taiwaneses, NT).
-   BILL_AMT4: Monto del estado de cuenta en junio de 2005 (dólares taiwaneses, NT).
-   BILL_AMT5: Monto del estado de cuenta en mayo de 2005 (dólares taiwaneses, NT).
-   BILL_AMT6: Monto del estado de cuenta en abril de 2005 (dólares taiwaneses, NT).
-   PAY_AMT1: Monto del pago anterior en septiembre de 2005 (dólares taiwaneses, NT).
-   PAY_AMT2: Monto del pago anterior en agosto de 2005 (dólares taiwaneses, NT).
-   PAY_AMT3: Monto del pago anterior en julio de 2005 (dólares taiwaneses, NT).
-   PAY_AMT4: Monto del pago anterior en junio de 2005 (dólares taiwaneses, NT).
-   PAY_AMT5: Monto del pago anterior en mayo de 2005 (dólares taiwaneses, NT).
-   PAY_AMT6: Monto del pago anterior en abril de 2005 (dólares taiwaneses, NT).
-   default.payment.next.month: Pago en mora (1=sí, 0=no).

Por otro lado, veamos con qué tipo de datos contamos.

```{r}
# Verificar el tipo de datos del dataset.
str(data_credit)
```

Antes de hacer un pequeño conteo de la cantidad de missing value, vamos a realizar un pequeño resumen de la base de datos.

```{r}
library(skimr)

# Resumen del dataset.
summary(data_credit)

# Generamos un cuadro resumen, con la información anterior.
skim(data_credit)
```

Apesar de qué el cuadro resumen anterior ya nos indica que las variables no tienen missing value, nos parece pertinente verificarlo de manera aislada, para ello.

```{r}
#Verificamos la cantidad de datos nulos que hay nuestro dataset
sum(is.na(data_credit))

#Verificamos la cantidad de datos nulos que hay en cada columna
sapply(data_credit, function(x) sum(is.na(x)))
```

Sin embargo, hay columnas que aunque no están vacías, contiene datos que no nos sirven, por eso hay que filtrar estos datos. Estos datos no sirven por el hecho de que no están definidos como parámetros significativos, es decir, si tenemos definidos la variable sexo como 1=hombre y 2=mujer, entonces aparecen números como el 3 y 0, por ello hay que filtrarlos, ya que afectan los análisis.

Nos damos cuenta de ello, gracias a ver el cuadro resumen, que aparecen valores que no deberían aparecer.

```{r}
library(tidyverse)

# Filtramos los datos que están definidos.
data_credit <- data_credit %>%
  filter(MARRIAGE %in% c(1, 2, 3))

# Filtramos los datos que están definidos.
data_credit <- data_credit %>%
  filter(EDUCATION %in% c(1, 2, 3, 4, 5, 6))

data_credit <- data_credit %>%
  filter(PAY_0 %in% c(-1, 1, 2, 3, 4, 5, 6, 7, 8, 9))

data_credit <- data_credit %>%
  filter(PAY_2 %in% c(-1, 1, 2, 3, 4, 5, 6, 7, 8, 9))

data_credit <- data_credit %>%
  filter(PAY_3 %in% c(-1, 1, 2, 3, 4, 5, 6, 7, 8, 9))

data_credit <- data_credit %>%
  filter(PAY_4 %in% c(-1, 1, 2, 3, 4, 5, 6, 7, 8, 9))

data_credit <- data_credit %>%
  filter(PAY_5 %in% c(-1, 1, 2, 3, 4, 5, 6, 7, 8, 9))

data_credit <- data_credit %>%
  filter(PAY_6 %in% c(-1, 1, 2, 3, 4, 5, 6, 7, 8, 9))
```

Realizamos de nuevo nuestro cuadro resumen después de esta filtración con el objetivo de observar las nuevas tendencias de la base.

```{r}
library(skimr)

# Resumen del dataset.
summary(data_credit)

# Generamos un cuadro resumen, con la información anterior.
skim(data_credit)
```

Gracias a todo lo anterior ya tenemos una base de datos limpia, lista para el análisis estadístico.

### Análisis Estadístico de la Base de Datos

Para esta sección, nuestro objetivo es explorar el comportamiento de nuestro conjunto de datos de manera más profunda. Para ello, aplicaremos algunas técnicas estadísticas que nos permitirán obtener información relevante.

En primer lugar, vamos a construir una matriz de correlación. Esta herramienta nos ayudará a identificar las relaciones más fuertes entre las variables de nuestro dataset. Es importante recordar que la matriz de correlación solo tiene sentido cuando se aplica a variables numéricas, por lo que es esencial seleccionar adecuadamente las variables antes de proceder con este análisis.

#### Matriz de Correlación

Vamos a seleccionar solo las variables que sean de interés, es decir, vamos a quitar variables como el id, y el sexo, ya que el id es único para cada persona en el data set, y la variable sexo es una variable de tipo categórico, lo mismo pasa con la variable de defaul.payment, la cual a pesar de representarse con números, estos significan que son categóricos.

```{r}
library(tidyverse)
# Seleccionamos las variables.
data_credit_numerico <- data_credit %>% select(-ID, -SEX, -EDUCATION, -MARRIAGE, -PAY_0, -PAY_2, -PAY_3, -PAY_4, -PAY_5, -PAY_6, -default.payment.next.month)
```

Con los datos filtrados, podemos entonces realizar nuestra matriz de correlación.

```{r}
library(dplyr)
library(ggplot2)
library(reshape2)


# Crear la matriz de correlación
matriz_correlacion <- cor(data_credit_numerico, use = "complete.obs")

# Creamos la variable para ver la matriz de correlación como un gráfico de calor
base_matriz <- melt(matriz_correlacion)

# Hacemos el plot de la base 
ggplot(base_matriz, aes(Var1, Var2, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab") + 
  theme_minimal() +
  labs(title = "Matriz de Correlación de Variables Numéricas",
       x = "", y = "") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Agregamos la misma matriz, pero esta vez indicando los índices de correlación, para visualizar de manera gráfica y matemática la correlación existente.

```{r}
library(dplyr)
library(ggplot2)
library(reshape2)


# Crear la matriz de correlación
matriz_correlacion <- cor(data_credit_numerico, use = "complete.obs")

# Creamos la variable para ver la matriz de correlación como un gráfico de calor
base_matriz <- melt(matriz_correlacion)

# Hacemos el plot de la base 
ggplot(base_matriz, aes(Var1, Var2, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab") + 
  theme_minimal() + geom_text(aes(label = round(value, 2)), color = "black", size = 3) +
  labs(title = "Matriz de Correlación de Variables Numéricas",
       x = "", y = "") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

#### Gráficos relacionados a la Base de Datos

##### Gráficos de Variables Numéricas

Vamos a realizar algunos gráficos de la base, con el fin de observar cómo se comportan los datos, para ello, primero veamos algunos histogramas, recordemos que los histogramas están hechos para variables numéricas, por lo que trataremos de ir en orden a la hora de gráficarlas.

Damos inicio con la variable de "LIMIT_BAL", la cual se refiere al crédito otorgado.

```{r}
library(ggplot2)
library(dplyr)

data_credit %>%
  ggplot(aes(x = LIMIT_BAL)) + 
  geom_histogram(binwidth = 50000, fill = "steelblue", color = "black", alpha = 0.7) +
  geom_vline(aes(xintercept = mean(LIMIT_BAL)), linetype = "dashed", color = "red", size = 1) + # Línea punteada de la media
  labs(title = "Histograma de la Cantidad de Crédito Otorgado",
       x = "Crédito Otorgado",
       y = "Frecuencia") + 
  theme_minimal()

```

Agregamos un gráfico adicional, donde podemos observar como se comporta la densidad de esta variable.

```{r}
library(ggplot2)
library(dplyr)

data_credit %>%
  ggplot(aes(x = LIMIT_BAL)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 50000, fill = "steelblue", color = "black", alpha = 0.7) + 
  geom_density(color = "red", size = 1) + # Densidad en línea roja
  geom_vline(aes(xintercept = mean(LIMIT_BAL)), linetype = "dashed", color = "black", size = 1) + # Línea punteada de la media
  labs(title = "Histograma y Densidad de la Cantidad de Crédito Otorgado",
       x = "Crédito Otorgado",
       y = "Densidad") + 
  theme_minimal()

```

Procedemos ahora con la variable de la edad, esto porque queremos visualizar la distribución de las edades de nuestro data set.

```{r}
library(ggplot2)
library(dplyr)

data_credit %>%
  ggplot(aes(x = AGE)) + 
  geom_histogram(binwidth = 1, fill = "steelblue", color = "black", alpha = 0.7) +
  geom_vline(aes(xintercept = mean(AGE, na.rm = TRUE)), 
             color = "red", 
             linetype = "dashed", 
             size = 1) +
  labs(title = "Histograma de las edades por sexo.",
       x = "Edades",
       y = "Frecuencia") + 
  facet_wrap(~SEX, labeller = as_labeller(c("1" = "Hombre", "2" = "Mujer"))) + 
  theme_minimal()

```

Agregamos un gráfico adicional donde podemos observar la densidad de la variable.

```{r}
library(ggplot2)
library(dplyr)

data_credit %>%
  ggplot(aes(x = AGE)) + 
  geom_histogram(aes(y = after_stat(density)), binwidth = 1, fill = "steelblue", color = "black", alpha = 0.7) + 
  geom_density(aes(y = after_stat(density)), color = "red", size = 1) +  # Curva de densidad en verde
  geom_vline(aes(xintercept = mean(AGE, na.rm = TRUE)), 
             color = "black", 
             linetype = "dashed", 
             size = 1) +  # Línea roja punteada
  labs(title = "Histograma de las edades por sexo.",
       x = "Edades",
       y = "Frecuencia") + 
  facet_wrap(~SEX, labeller = as_labeller(c("1" = "Hombre", "2" = "Mujer"))) + 
  theme_minimal()

```

Con estas dos variables es sufiente de gráficos aislados, debido a la naturaleza de las demás variables numéricas que tenemos en el dataset, en vez de eso, vamos a ver cómo se comportan los gráficos, cuando se plotean las relaciones entre ellos.

```{r}
library(ggplot2)
library(dplyr)

data_credit %>%
  ggplot(aes(x = AGE)) + 
  geom_histogram(binwidth = 1, fill = "steelblue", color = "black", alpha = 0.7) +
  geom_vline(aes(xintercept = mean(AGE, na.rm = TRUE)), 
             color = "red", 
             linetype = "dashed", 
             size = 1) +  
  labs(title = "Histograma de las edades por nivel educativo.",
       x = "Edades",
       y = "Frecuencia") + 
  facet_wrap(~EDUCATION, labeller = labeller(EDUCATION = c(
    "1" = "Posgrado", 
    "2" = "Universidad", 
    "3" = "Secundaria", 
    "4" = "Otros", 
    "5" = "Desconocido", 
    "6" = "Desconocido"
  ))) + theme_minimal()

```

Gracias a este gráfico, podemos observar que la gran mayoría de los datos se encuentran en los subvariables de Universidad. Secundaria y Posgrado.

Ahora veamos como se distribuye la edad, con respecto a la variable de Estado Civil.

```{r}
library(ggplot2)
library(dplyr)

data_credit %>%
  ggplot(aes(x = AGE)) + 
  geom_histogram(binwidth = 1, fill = "steelblue", color = "black", alpha = 0.7) +
  geom_vline(aes(xintercept = mean(AGE, na.rm = TRUE)), 
             color = "red", 
             linetype = "dashed", 
             size = 1) +  # Línea roja punteada para la media
  labs(title = "Histograma de las edades facet por Marriage",
       x = "Edades",
       y = "Frecuencia") + 
  facet_wrap(~MARRIAGE, labeller = as_labeller(c("1" = "Casado", "2" = "Soltero", "3" = "Otros"))) + 
  theme_minimal()

```

Conjeturando, podemos ver que la distribución de las edades de las personas que están casadas, sigue más o menos una distribución normal, mientras que las personas que están solteras lo hace como una distribución exponencial.

Por último nos interesa saber cómo se distribuyen las edades en relación a la variable de impago, que es la que tiene el principal peso de dicho estudio.

```{r}
library(ggplot2)
library(dplyr)

data_credit %>%
  ggplot(aes(x = AGE)) + 
  geom_histogram(binwidth = 1, fill = "steelblue", color = "black", alpha = 0.7) +
  geom_vline(aes(xintercept = mean(AGE, na.rm = TRUE)), 
             color = "red", 
             linetype = "dashed", 
             size = 1) +  
  labs(title = "Histograma de las edades facet por Impago",
       x = "Edades",
       y = "Frecuencia") + 
  facet_wrap(~default.payment.next.month, labeller = as_labeller(c("0" = "A tiempo", "1" = "Impago"))) + 
  theme_minimal()

```

Vamos a realizar las mismas gráficas, pero esta vez con la la variable de LIMIT_BAL, para observar su comportamiento.

```{r}
library(ggplot2)
library(dplyr)

data_credit %>%
  ggplot(aes(x = LIMIT_BAL)) + 
  geom_histogram(binwidth = 50000, fill = "steelblue", color = "black", alpha = 0.7) +  
  geom_vline(aes(xintercept = mean(LIMIT_BAL, na.rm = TRUE)), 
             color = "red", 
             linetype = "dashed", 
             size = 1) +  
  labs(title = "Histograma de los límites de crédito por nivel educativo.",
       x = "Límite de Crédito",
       y = "Frecuencia") + 
  facet_wrap(~EDUCATION, labeller = labeller(EDUCATION = c(
    "1" = "Posgrado", 
    "2" = "Universidad", 
    "3" = "Secundaria", 
    "4" = "Otros", 
    "5" = "Desconocido", 
    "6" = "Desconocido"
  ))) + theme_minimal()

```

Agregamos también un gráfico de densidades, esto con el objetivo de ver la distribución.

```{r}
library(ggplot2)
library(dplyr)
library(ggridges)

data_credit %>%
  ggplot(aes(x = LIMIT_BAL, y = as.factor(EDUCATION), fill = as.factor(EDUCATION), color = as.factor(EDUCATION))) +
  geom_density_ridges(alpha = 0.5) +
  labs(title = "Densidad de los límites de crédito por nivel educativo.",
       x = "Límite de Crédito",
       y = "Nivel Educativo") + 
  scale_fill_manual(values = c("1" = "steelblue", "2" = "lightblue", "3" = "lightgreen", 
                               "4" = "lightyellow", "5" = "lightcoral", "6" = "lightsalmon")) +  
  scale_color_manual(values = c("1" = "blue", "2" = "darkblue", "3" = "darkgreen", 
                                "4" = "darkorange", "5" = "darkred", "6" = "salmon")) +  
  scale_y_discrete(labels = c(
    "1" = "Posgrado", 
    "2" = "Universidad", 
    "3" = "Secundaria", 
    "4" = "Otros", 
    "5" = "Desconocido", 
    "6" = "Desconocido"
  )) +  
  theme_minimal()
```

Las densidades que deben llamar nuestra atención son la de Secundaria, Universidad y Posgrado, esto por el hecho de que ellas son las que tienen la mayor concentración de datos.

Veamos que las densidades tienen más o menos una distribución exponencial.

```{r}
library(ggplot2)
library(dplyr)

data_credit %>%
  ggplot(aes(x = LIMIT_BAL)) + 
  geom_histogram(binwidth = 50000, fill = "steelblue", color = "black", alpha = 0.7) +  
  geom_vline(aes(xintercept = mean(LIMIT_BAL, na.rm = TRUE)), 
             color = "red", 
             linetype = "dashed", 
             size = 1) +  
  labs(title = "Histograma de los límites de crédito facet por estado civil",
       x = "Límite de Crédito",
       y = "Frecuencia") + 
  facet_wrap(~MARRIAGE, labeller = as_labeller(c("1" = "Casado", "2" = "Soltero", "3" = "Otros"))) + 
  theme_minimal()

```

Agregamos densidades de las respectivas variables.

```{r}
library(ggplot2)
library(dplyr)
library(ggridges)

data_credit %>%
  ggplot(aes(x = LIMIT_BAL, y = as.factor(MARRIAGE), fill = as.factor(MARRIAGE), color = as.factor(MARRIAGE))) +
  geom_density_ridges(alpha = 0.5) +  
  labs(title = "Densidad de los límites de crédito por estado civil.",
       x = "Límite de Crédito",
       y = "Estado Civil") + 
  scale_fill_manual(values = c("1" = "steelblue", "2" = "lightblue", "3" = "lightgreen")) +  
  scale_color_manual(values = c("1" = "blue", "2" = "darkblue", "3" = "darkgreen")) +  
  scale_y_discrete(labels = c(
    "1" = "Casado", 
    "2" = "Soltero", 
    "3" = "Otros"
  )) +  
  theme_minimal()  

```

```{r}
library(ggplot2)
library(dplyr)

data_credit %>%
  ggplot(aes(x = LIMIT_BAL)) + 
  geom_histogram(binwidth = 50000, fill = "steelblue", color = "black", alpha = 0.7) +  
  geom_vline(aes(xintercept = mean(LIMIT_BAL, na.rm = TRUE)), 
             color = "red", 
             linetype = "dashed", 
             size = 1) +  
  labs(title = "Histograma de los límites de crédito facet por Impago",
       x = "Límite de Crédito",
       y = "Frecuencia") + 
  facet_wrap(~default.payment.next.month, labeller = as_labeller(c("0" = "A tiempo", "1" = "Impago"))) + 
  theme_minimal()

```

Agregamos dicho gráfico de densidades para las anteriores variables.

```{r}
library(ggplot2)
library(dplyr)
library(ggridges)

data_credit %>%
  ggplot(aes(x = LIMIT_BAL, y = as.factor(default.payment.next.month), fill = as.factor(default.payment.next.month), color = as.factor(default.payment.next.month))) +
  geom_density_ridges(alpha = 0.5) +  
  labs(title = "Densidad de los límites de crédito por estado de impago.",
       x = "Límite de Crédito",
       y = "Estado de Impago") + 
  scale_fill_manual(values = c("0" = "steelblue", "1" = "lightcoral")) +  
  scale_color_manual(values = c("0" = "blue", "1" = "darkred")) +  
  scale_y_discrete(labels = c(
    "0" = "A tiempo", 
    "1" = "Impago"
  )) +  
  theme_minimal()  

```

Por último veamos cómo de distribuyen las variables AGE y LIMIT_BAL. Usaremos un gráfico de dispersión

```{r}
library(ggplot2)

ggplot(data_credit, aes(x = AGE, y = LIMIT_BAL)) +
  geom_point(color = "steelblue", alpha = 0.7) +  # Puntos azules con algo de transparencia
  geom_smooth(method = "lm", color = "red", se = FALSE) +  # Línea de regresión lineal en rojo
  labs(title = "Gráfico de dispersión entre Edad y Límite de Crédito con regresión lineal",
       x = "Edad",
       y = "Límite de Crédito") +
  theme_minimal()

```

Cuando realizamos la matriz de correlación, vimos que la correlación entre estas dos variables es de 0.21, lo cual es algo bajo, podemos entonces ver esa tendencia en este gráfico, pues tenemos muchos puntos dispersos, al realizar una regresión lineal, podemos ver la linea que mejor se ajusta a estos puntos. Podemos inferir que hay una relación positiva débil entre las variables. Aunque un valor de 0.21 no ayuda a predecir qué pasaría cuando las variables aumenten.

##### Gráficos de Variables Categóricas. 

Comenzaremos esta sección realizando gráficos de barras, con la intención de ver las frecuencias de las variables.

```{r}
library(ggplot2)

# Crear gráfico de barras de la variable SEX con etiquetas personalizadas
ggplot(data = data_credit, aes(x = as.factor(SEX))) +
  geom_bar(fill = "skyblue", color = "black") +
  labs(title = "Distribución de SEX", x = "Sexo", y = "Frecuencia") +
  scale_x_discrete(labels = c("1" = "Hombre", "2" = "Mujer")) +
  theme_minimal()
```

Con esto podemos ver que tenemos más datos de mujeres que de hombres.

Veamos como se comporta la variable de educación.

```{r}
library(ggplot2)

ggplot(data = data_credit, aes(x = as.factor(EDUCATION))) +
  geom_bar(fill = "skyblue", color = "black") +
  labs(title = "Distribución del Nivel Educativo", x = "Nivel Educativo", y = "Frecuencia") +
  scale_x_discrete(labels = c("1" = "Posgrado", 
                              "2" = "Universidad", 
                              "3" = "Secundaria", 
                              "4" = "Otros", 
                              "5" = "Desconocido", 
                              "6" = "Desconocido")) +
  theme_minimal()
```

Observamos entonces que nuestra base de datos contiene más información de personas que están posgrados o que terminaron la universidad.

Luego para la variable de estado civil.

```{r}
library(ggplot2)

# Crear gráfico de barras de la variable MARRIAGE con etiquetas personalizadas
ggplot(data = data_credit, aes(x = as.factor(MARRIAGE))) +
  geom_bar(fill = "skyblue", color = "black") +
  labs(title = "Distribución del Estado Civil", x = "Estado Civil", y = "Frecuencia") +
  scale_x_discrete(labels = c("1" = "Casado", 
                              "2" = "Soltero", 
                              "3" = "Otros")) +
  theme_minimal()

```

Al igual que antes, tenemos más información de las personas que están casadas y de las que están solteras.

Por último vamos a ver la gráfica de barras de la variable de interés, la cual es si cayó en impago o no lo hizo.

```{r}
library(ggplot2)

# Crear gráfico de barras de la variable default.payment.next.month con etiquetas personalizadas
ggplot(data = data_credit, aes(x = as.factor(default.payment.next.month))) +
  geom_bar(fill = "skyblue", color = "black") +
  labs(title = "Distribución de Impagos del Mes Siguiente", x = "Impago", y = "Frecuencia") +
  scale_x_discrete(labels = c("0" = "A tiempo", "1" = "Impago")) +
  theme_minimal()

```

Con esto terminamos los gráficos aislados de las variables categóricas y damos inicio a ver cómo se distribuyen cuando las relacionamos.

```{r}
library(ggplot2)
library(dplyr)

# Crear gráfico de barras apiladas de la variable SEX en relación con default.payment.next.month
ggplot(data = data_credit, aes(x = as.factor(default.payment.next.month), fill = as.factor(SEX))) +
  geom_bar(position = "fill", color = "black") +  # posición "fill" para ver proporciones
  labs(title = "Proporción de Hombres y Mujeres en Impago vs Pago a Tiempo", 
       x = "Estado de Pago", y = "Proporción") +
  scale_x_discrete(labels = c("0" = "A tiempo", "1" = "Impago")) +
  scale_fill_manual(labels = c("1" = "Hombre", "2" = "Mujer"), values = c("skyblue", "lightcoral")) + 
  theme_minimal() +
  theme(legend.title = element_blank())  # Ocultar título de leyenda

```

Del gráfico anterior, podemos observar entonces que de las personas que cayeron en impago, la mayoría son mujeres, al menos más del 50%, sin embargo, veamos de manera aislada esto.

```{r}
library(ggplot2)
library(dplyr)

# Crear un gráfico de barras apiladas para mostrar la proporción de impago entre las mujeres
data_credit %>%
  filter(SEX == 2) %>%  # Filtrar solo las mujeres
  ggplot(aes(x = as.factor(default.payment.next.month), fill = as.factor(default.payment.next.month))) +
  geom_bar(stat = "count", color = "black") +
  labs(title = "Distribución de Impago entre Mujeres",
       x = "Impago",
       y = "Frecuencia",
       fill = "Impago") +
  scale_x_discrete(labels = c("0" = "A tiempo", "1" = "Impago")) +  # Etiquetas personalizadas
  scale_fill_manual(values = c("0" = "steelblue", "1" = "tomato")) +  # Colores personalizados
  theme_minimal() +
  theme(legend.position = "none")  # Eliminar la leyenda si no es necesaria

```

Numéricamente esto es:\

```{r}
library(dplyr)

mujeres_impago <- data_credit %>%
  filter(SEX == 2) %>%  # Filtramos los datos, porque nos interesan solo las mujeres
  summarise(
    total_mujeres = n(),  
    mujeres_impago = sum(default.payment.next.month == 1)  # Número de mujeres en impago
  ) %>%
  mutate(porcentaje_impago = mujeres_impago / total_mujeres * 100)  # Calculamos el porcentaje de las mujeres que cayeron en impago.

# Mostramos el resultado
mujeres_impago

```

Con esto podemos observar que de las mujeres totales, solo el 33% cayó en impago. Haremos un análisis similar con respecto a los hombre.

```{r}
library(ggplot2)
library(dplyr)

data_credit %>%
  filter(SEX == 1) %>%  # Filtrar solo los hombres
  ggplot(aes(x = as.factor(default.payment.next.month), fill = as.factor(default.payment.next.month))) +
  geom_bar(stat = "count", color = "black") +
  labs(title = "Distribución de Impago entre Hombres",
       x = "Impago",
       y = "Frecuencia",
       fill = "Impago") +
  scale_x_discrete(labels = c("0" = "A tiempo", "1" = "Impago")) +  
  scale_fill_manual(values = c("0" = "steelblue", "1" = "tomato")) +
  theme_minimal() +
  theme(legend.position = "none") 

```

Numéricamente podemos observar que:

```{r}
library(dplyr)

hombres_impago <- data_credit %>%
  filter(SEX == 1) %>%  
  summarise(
    total_hombres = n(),  
    hombres_impago = sum(default.payment.next.month == 1)  
  ) %>%
  mutate(porcentaje_impago = hombres_impago / total_hombres * 100)  

hombres_impago

```

Con esto observamos que el porcentaje de los hombres que cayeron en impago, aunque es por poco, es mayor que el de las mujeres que cayeron en impago. Esto lo hicimos porque anteriormente se estaban comparando magnitudes que no se podían comparar, con los porcentajes podemos determinar que relativamente, los hombres tienden a caer más en impago que las mujeres, al menos eso podemos inferrir gracias a la evidencia de los datos.

Ahora vamos a visualizar el crédito con respecto a la variable de MARRIAGE.

```{r}
ggplot(data_credit, aes(x = as.factor(MARRIAGE), y = LIMIT_BAL, color = as.factor(MARRIAGE))) +
  geom_jitter() +
  labs(title = "Límite de Crédito por Estado Civil", x = "Estado Civil", y = "Límite de Crédito") +
  theme_minimal()
```

Después analizaremos la relación entre las variables, ya que son variables de diferente naturaleza, es decir una categórica y una numérica, por lo que utilizaremos un análisis ANOVA para clarificar si las diferencias se deben al azar o si la evidencia estadística indican que están relacionados. Por el momento, haremos una comparación con gráficos de cajas, para observar de manera gráfica, como se siguen comportando.

```{r}
ggplot(data_credit, aes(x = as.factor(MARRIAGE), y = LIMIT_BAL, fill = as.factor(MARRIAGE))) +
  geom_boxplot() +
  labs(title = "Límite de Crédito por Estado Civil", x = "Estado Civil", y = "Límite de Crédito") +
  theme_minimal()
```

Podemos observar gráficamente que las diferencias gráficamente no son tan significativas, sin embargo esto es una conjetura, nos ajustaremos a un análisis estadístico más riguroso en posteriores secciones. Por otro lado, podemos observar que el nivel 3 difiere de los otros niveles, esto se puede deber a las bajas observaciones que tenemos en este nivel.

## 1. Parte de Planificación

## 2. Parte de Escritura

### 2.1 Escribir, escribir, escribir

### 2.2 Introducción

### 2.3 Resumen

### 2.4 Ordenamiento Final

### 2.5 Conclusión

## 3. Revisiones Finales
